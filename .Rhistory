boxplot ( len ~ dose, d,xlab="dose", ylab= "Len")
boxplot ( len ~ supp, d,xlab="dose", ylab= "Len")
boxplot ( len ~ supp, d,xlab="Supplement", ylab= "Len")
unique(d$dose)
dose05 <- d$len [ d$dose == .05]
dose1 <- d$len [ d$dose == 1]
dose2 <- d$len [ d$dose == 2]
dose1
dose2
t.test ( dose05, dose1, alternative = "greater" , paired= FALSE, conf.level =.95)
dose05
unique(d$dose)
dose05 <- d$len [ d$dose == .5]
t.test ( dose05, dose1, alternative = "greater" , paired= FALSE, conf.level =.95)
t.test ( dose1, dose05, alternative = "greater" , paired= FALSE, conf.level =.95)
t.test ( dose05, dose1, alternative = "greater" , paired= FALSE, conf.level =.95)
t.test ( dose05, dose2, alternative = "greater" , paired= FALSE, conf.level =.95)
t.test ( dose1, dose2, alternative = "greater" , paired= FALSE, conf.level =.95)
t.test ( d$len , d$supp)
t.test ( d$len ~ d$supp, alternative="greater")
t.test ( d$len ~ d$supp)
t.test ( d$len ~ d$dose)
t.test ( d$len ~ d$supp)
t.test ( dose1, dose2, paired= FALSE, conf.level =.95)
dose05 <- d [ d$dose == .5]
dose1 <- d [ d$dose == 1]
dose2 <- d [ d$dose == 2]
t.test ( dose1$dose, dose2$dose, paired= FALSE, conf.level =.95)
dose05 <- d [ dose == .5]
dose05 <- d [ d$dose == .5]
d
str(d)
dose05 <- d [ ,d$dose == .5]
dose05 <- d [ d$dose == .5,]
dose05 <- d [ d$dose == .5,]
dose1 <- d [ d$dose == 1,]
dose2 <- d [ d$dose == 2,]
t.test ( dose1$dose, dose2$dose, paired= FALSE, conf.level =.95)
dose1$dose
dose1
t.test ( dose1$len, dose2$len, paired= FALSE, conf.level =.95)
t.test ( dose1$len[supp=="VC"], dose2$len[supp=="OJ"], paired= FALSE, conf.level =.95)
t.test ( dose1[supp=="VC",]$len, dose2[supp=="OJ",]$len, paired= FALSE, conf.level =.95)
dose1
t.test ( dose1[dose1$supp=="VC",]$len, dose2[dose2$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose1[dose1$supp=="VC",]$len, dose1[dose2$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose1[dose1$supp=="VC",]$len, dose1[dose$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose1[dose1$supp=="VC",]$len, dose1[dose1$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose2[dose2$supp=="VC",]$len, dose2[dose2$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose2[dose2$supp=="VC",]$len, dose2[supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose05[dose05$supp=="VC",]$len, dose05[dose05$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose05[dose05$supp=="VC",]$len, dose05[dose05$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose2[dose2$supp=="VC",]$len, dose2[supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose05[dose05$supp=="VC",]$len, dose05[dose05$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose2[dose2$supp=="VC",]$len, dose2[supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose05[dose05$supp=="VC",]$len, dose05[dose05$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose2[dose2$supp=="VC",]$len, dose2[dose2$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose1[dose1$supp=="VC",]$len, dose1[dose1$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose05[dose05$supp=="VC",]$len, dose05[dose05$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose2[dose2$supp=="VC",]$len, dose2[dose2$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
t.test ( dose1[dose1$supp=="VC",]$len, dose1[dose1$supp=="OJ",]$len, paired= FALSE, conf.level =.95)
boxplot ( len ~ dose, d,xlab="dose", ylab= "Len")
summary( d~len)
? summary
oj <- d$len [ d$supp=="OJ"]
vc <- d$len [ d$supp=="VC"]
t.test ( oj, vc, alternative = "greater" , paired= FALSE, conf.level =.95)
oj <- d$len [ d$supp=="OJ"]
vc <- d$len [ d$supp=="VC"]
t.test ( oj, vc , paired= FALSE, conf.level =.95)
Sys.getenv("R_PROFILE")
getwd()
setwd()
setwd(c:/temp")
setwd("c:/temp")
getwd()
setwd()
setwd("C:/Users/home/Documents")
library(swirl)
swirl()
install.packages("swirl")
library(swirl)
install.packages("swirl")
swirl()
library(swirl)
swirl()
R.version.string
install.packages("installr")
library(installr)
install+load installr
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
R.version.string
R.version.string
library(swirl)
swirl()
swirl()
install_from_swirl("Regression Models")
install_from_swirl("Regression Models")
install_from_swirl("Regression Models")
swirl()
swirl()
install.packages("rmarkdown")
m1 <- lm( mpg~ cylfactor+disp+hp+drat+wt+qsec+vs+gear+carb+amfactor , data=mtcars)
m2 <- lm ( mpg ~ amfactor , data=mtcars)
m3 <- lm( mpg~ cylfactor+hp+wt+amfactor , data=mtcars)
anova(m2,m3)
anova(m1,m2)
anova(m1,m3)
library(datasets)
m1 <- lm( mpg~ cylfactor+disp+hp+drat+wt+qsec+vs+gear+carb+amfactor , data=mtcars)
m2 <- lm ( mpg ~ amfactor , data=mtcars)
m3 <- lm( mpg~ cylfactor+hp+wt+amfactor , data=mtcars)
anova(m2,m3)
anova(m1,m2)
anova(m1,m3)
dim(mtcars)
mtcars$amfactor <- factor ( mtcars$am, labels = c( "automatic", "manual"))
mtcars$cylfactor <- factor ( mtcars$cyl)
str(mtcars)
summary(mtcars)
describeBy(mtcars, mtcars$amfactor)
library(psych)
dim(mtcars)
mtcars$amfactor <- factor ( mtcars$am, labels = c( "automatic", "manual"))
mtcars$cylfactor <- factor ( mtcars$cyl)
str(mtcars)
summary(mtcars)
describeBy(mtcars, mtcars$amfactor)
m1 <- lm( mpg~ cylfactor+disp+hp+drat+wt+qsec+vs+gear+carb+amfactor , data=mtcars)
m2 <- lm ( mpg ~ amfactor , data=mtcars)
m3 <- lm( mpg~ cylfactor+hp+wt+amfactor , data=mtcars)
anova(m2,m3)
anova(m1,m2)
anova(m1,m3)
summary(m3)
par(mfrow=c(2,2))
plot(m3)
plot(m2)
plot(m2)
plot(m3)
m4 <- lm( mpg~ wt+qsec+amfactor , data=mtcars)
plot(m4)
summary(m3)
summary(m2)
summary(m3)
summary(m4)
?step
resid(m3)
m3 <- lm( mpg~ cylfactor+hp+wt+amfactor , data=mtcars)
attributes(m3)
attributes(m3).model
attributes(m3)$model
attributes(m3)$residuals
resid(m3)
summary(m3)
par(mfrow=c(2,2))
plot(m3)
?step
par(mfrow=c(3,3))
plot(m3)
pairs(mtcars)
m1 <- lm( mpg~ cylfactor+disp+hp+drat+wt+qsec+vs+gear+carb+amfactor , data=mtcars)
bestmodel <- step(m1, direction = "both")
summary(bestmodel)
anova ( m1,m2,m3, bestmodel)
anova ( m3, bestmodel)
m1 <- lm( mpg~ cylfactor+disp+hp+drat+wt+qsec+vs+gear+carb+amfactor , data=mtcars)
anova ( m1,m2,m3, bestmodel)
anova ( m3, bestmodel)
anova ( m1,m2,m3, bestmodel)
anova ( m2, bestmodel)
plot(bestmodel)
plot(m3)
summary(bestmodel)
summary(m3)
summary(bestmodel)
anova(m1, m2)
anova(m1, bestmodel)
anova(m3, bestmodel)
m5 <- lm ( mpg ~ . , data=mtcars)
b1 <- step( m5, direction = "both")
summary(b1)
summary(bestmodel)
anova ( b1, bestmodel)
anova ( m3, bestmodel)
vit(bestmodel)
vif(bestmodel)
?vif
??vif
vif(m1)
m1
m2
bestmodel
install.packages("VIF")
vif(m1)
library(VIF)
vif(m1)
m1
m5 <- lm ( mpg ~ . , data=mtcars)
vif(m5)
?vif
vif ( mtcars )
vif(m1)
vif(bestmodel)
mtcars
dataset <- mtcars
dataset
str(dataset)
dataset$amfacotr <- NULL
str(dataset)
dataset$amfactor <- NULL
dataset$cylfactor <- NULL
str(dataset)
m5 <- lm ( mpg ~. , data=dataset)
vif(m5)
m5
str(dataset)
library(car)
fit<-lm(Fertility~.,data=swiss)
vif(fit)
library(car)
install.packages("car")
library(car)
library(car)
fit<-lm(Fertility~.,data=swiss)
vif(fit)
m5
vif(m5)
sqrt(vif(m5))
?vif
sqrt(vif(bestmodel))
b
anova ( b1, bestmodel)
sqrt(vif(b1))
sqrt(vif(bestmodel))
sqrt(vif(m5))
library(car)
fit <- lm(mpg ~ ., data=mtcars)
vif(fit)
fit
vif(fit)
library(mtcars)
library(car)
vif(fit)
vif(m1)
vif(bestmodel)
m1
vif(bestmodel)
vif(m1)
vif(m2)
m,2
m2
m3
vif(m3)
m1 <- lm ( mpg ~. , data=dataset)
dataset
mtcars
m1 <- lm ( mpg ~. , data=mtcars)
vif(m1)
mtcars
str(mtcars)
dataset <- mtcars
dim(dataset)
dataset$amfactor <- factor ( dataset$am, labels = c( "automatic", "manual"))
dataset$cylfactor <- factor ( dataset$cyl)
dataset$am <- NULL
dataset$cyl <- NULL
m1 <- lm ( mpg ~. , data=dataset)
vif(m1)
?vif
m2 <- lm ( mpg ~ drat + qsec + vs + gear + amfactor+ carb, data =dataset)
vif(m2)
summary(m1)$coeff
cor(dataset)
cor(dataset[,-amfactor])
cor(dataset[,-dataset$amfactor])
dataset
vif(m1)
m2
summary(m2)$coeff
dataset <- mtcars
dim(dataset)
dataset$amfactor <- factor ( dataset$am, labels = c( "automatic", "manual"))
dataset$cylfactor <- factor ( dataset$cyl)
str(dataset)
m1 <- lm ( mpg ~. , data=dataset)
vif(m1)
dataset <- mtcars
m1 <- lm ( mpg ~. , data=dataset)
vif(m1)
m1
mtcars
load(mtcars)
library ( psych)
load(mtcars)
mtcars
str(mtcars)
mtcars$amfactor <- NULL
mtcars$cylfactor <- NULL
str(mtcars)
m1 <- lm ( mpg ~. , data=dataset)
vif(m1)
m1
mtcars
dataset <- mtcars
m1 <- lm ( mpg ~. , data=dataset)
vif(m1)
summary(m1)$coeff
dataset
dataset$am <- as.factor(dataset$am)
str(dataset)
dataset$am <- as.factor(dataset$am,  labels = c( "automatic", "manual"))
?as.factor
str(dataset)
dataset$am <- factor ( labels = c( "automatic", "manual"))
dataset$am <- factor ( dataset$am, labels = c( "automatic", "manual"))
dataset
str(dataset)
dataset$am <- factor ( dataset$am, labels = c( "automatic", "manual"))
dataset$gear <- as.factor ( dataset$gear)
dataset$carb <- as.factor ( dataset$carb)
dataset$cyl <- as.factor ( dataset$cyl)
dataset
str(dataset)
describeBy(datset, mtcars$amfactor)
m1
vif(m1)
vif (m1)
summary(m1)$coeff
cor(m1)
m1 <- lm( mpg~ . , data=dataset)
m1
vif(m1)
m2 <- lm( mpg~ am + drat + qsec + vs  , data=dataset)
vif(m2)
m2
summary(m2)
cor(dataset)
pairs(dataset)
pairs(dataset, panel=panel.smooth)
vif(m2)
vif(m1)
anova(m1,m2)
?cor
library(stats)
cor(dataset)
cor(mtcars)
vif(m2)
vif(m1)
vif(m2)
cor(mtcars)
m3 <- lm ( mpg ~ am + drat + qsec + vs + wt , data=dataset)
vif(m3)
summary(m3)
vif(m3)
anova ( m1,m2,m3)
m1 <- lm( mpg~ . , data=dataset)
vif(m1)
m2 <- lm( mpg~ am + drat + qsec + vs  , data=dataset)
vif(m2)
m3 <- lm ( mpg ~ am + drat + qsec + vs + wt , data=dataset)
vif(m3)
str(dataset)
library(mtcars)
?mtcars
mtcars
str(mtcars)
library(datasets)
mtcars
str(mtcars)
car.mtcars
?mtcars
load(mtcars)
?load
load ( "all.RData" )
m3
m3$coeff
summary(m3)
m3$fitted
m3$residual
m3$residual - m3$residual
m3$residual - m3$fitted
par(mfrow=c(2,2))
plot(m3)
par(mfrow=c(2,2))
plot(m1)
plot(m2)
plot(predict(m2), residuals(m2))
plot(predict(m3), residuals(m3))
identify(predict(m3), residuals(m3))
sessionInfo()
getwd()
setwd ("c:/temp/slidify/testing")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL()
browseURL('test.html')
browseURL('test.html')
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
str(data)
library(plyr)
#create variables and data frame
sampleid<-seq(1:100)
gender = rep(c("female","male"),c(50,50))
score <- rnorm(100)
age<-sample(25:35,100,replace=TRUE)
treatment <- rep(seq(1:5), each=4)
d <- data.frame(sampleid,gender,age,score, treatment)
str(d)
d
sapply(split(d, f = d$treatment), function(x) sum(x$gender == "female")/length(x$gender))
groupstat<-ddply(d, .(treatment),summarise,
meansc= mean(score),
meanage= mean(age),
meanID= mean(sampleid),
nfem= length(gender[gender=="female"]), # number females per treatment group
nmale= length(gender[gender=="male"]), # number of males per treatment group
percentfem= nfem/(nfem+nmale)) # percent females by treatment group
d
h <- groupstat<-ddply(d, .(treatment),summarise,
meansc= mean(score),
meanage= mean(age),
meanID= mean(sampleid),
nfem= length(gender[gender=="female"]), # number females per treatment group
nmale= length(gender[gender=="male"]), # number of males per treatment group
percentfem= nfem/(nfem+nmale)) # percent females by treatment group
h
str(data)
data [Area=="WORLD",]
data [data$Area=="WORLD",]
d
str(d)
str(data)
data [data$Area=="WORLD",]
q<- data [data$Area=="WORLD",]
prop.table(q)
?prop.table
str(data)
table(q)
w <- table(q)
str(w)
head(w)
w
w
?table
q
str(q)
w <- transform(q, total.agegroup=ave(cnt,Area,Period, FUN=sum))
str(w)
w
w <- transform(q, total.agegroup=ave(cnt,Area, FUN=sum))
w
w <- transform(q, total.agegroup=ave(cnt,Area, agegroup, FUN=sum))
w
w <- transform(q, total.agegroup.Area=ave(cnt,Area, agegroup, FUN=sum))
w
str(w)
w <- transform(w, pct.agegroup.Area=100*cnt/total.agegroup.Area)
w
country
top10 <- c ("United States of America" , "China" , "India", "Germany", "United Kingdom"  , "France" , "Japan" , "Russian Federation" , "Brazil" , "Italy" )
top10
slidify("index.Rmd")
slidify("index.Rmd")
top10data
str(top10data)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
str(data)
str(top10data)
slidify("index.Rmd")
str(top10data)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
continentaldata
slidify("index.Rmd")
continentaldata
continentaldata <- ddply ( subset(data, Area %in% r), c("Area", "Period"), summarise, total=sum(cnt) , average=ave(cnt))
slidify("index.Rmd")
slidify("index.Rmd")
?ddply
slidify("index.Rmd")
